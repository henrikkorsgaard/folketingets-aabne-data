"""
Consider making splitting the schema into individual *.graphql files 

Avoid generating the files. Think of developing the schema as API query definition. 
"""

# Import graphql datatype 
# Consider structuring your graphql schemas like this: https://github.com/OscarYuen/go-graphql-starter/tree/master/schema
scalar Time

schema {
    query: Query
}

type Query {
    afstemning(id:Int, type:String, kommentar: Boolean): [Afstemning]!
    aktor(id:Int, type:String, navn:String): [Aktor]!
    # I want to seperate the search query on akt√∏r because this entry point has a different usecase.
    # Use case is auto-complete search starting with first match
    search_aktor(navn:String!): [Aktor]!
    sag(id:Int, type: String):[Sag]!
}

type Afstemning {
    id:Int!
    nummer:Int!
    konklusion:String
    vedtaget:Int!
    kommentar:String
    mode: Int! 
    type: String!
    opdateringsdato: Time!
    # Relations
    stemmer: [Stemme!]!
    sag:Sag

}

# Sag is a rather large entity with a lot of fields that
# fit special cases and can be regarded as views
# I have included those who seem most useful right now
# Will expand the object when I know more about the fields
type Sag {
    id:Int!
    titel: String
    titelkort: String
    resume: String
    afstemningskonklusion: String 
    baggrundsmateriale: String
    begrundelse: String
    lovnummer: String
    paragrafnummer: Int
    paragraf:String
    retsinformationsurl: String 
    type: String
    kategori: String 
    status:String
    opdateringsdato: Time!
    
    # Relations
    afstemninger:[Afstemning]!
    #sagstrin: [Sagstrin]!
}

type Stemme {
    id:Int!
    type:String
    opdateringsdato: Time!
    # Relations
    afstemning:Afstemning!
    aktor:Aktor!
}

type Aktor {
    id:Int!
    type: String!
    gruppenavnkort: String
    fodselsdato: Time
    navn: String
    fornavn: String
    efternavn: String
    biografi: String 
    periode: Int # We need to make this a categorical maybe
    startdato: Time 
    slutdato: Time
    opdateringsdato: Time!
    # Relationer
    stemmer: [Stemme]
}

type Sagstrin {
    id:Int!
    folketingstidende:String
    folketingstidendenummer:String 
    folketingstidendeurl:String
    titel:String 
    dato:Time
    status:String
    type:String
    opdateringsdato: Time!
    
    # Relations
    sag: Sag
}